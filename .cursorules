# Quiz4selection Project Rules

[project_structure]
required_files:
  - app.py          # メインアプリケーション
  - config.py       # 設定ファイル
  - models.py       # データベースモデル
  - extensions.py   # Flask拡張機能
  - commands.py     # CLIコマンド
  - requirements.txt # 依存関係

[database]
schema.QuizAttempt.fields:
  - score: integer, not null, default 0
  - total_questions: integer, not null, default 0
  - grade: integer, not null
  - category: string, not null
  - subcategory: string, not null
  - difficulty: string, not null

[routes]
pattern: /grade/<grade>/category/<category>/subcategory/<subcategory>/difficulty
parameters:
  grade: [1-6]
  category: [japanese, math, science, society]
  difficulty: [easy, medium, hard]

[files]
quiz_data:
  pattern: quiz_data/grade_{1-6}/{category}/{subcategory}/{difficulty}/questions.json
  required: true

[templates]
base: base.html
required:
  - grade_select.html
  - category_select.html
  - subcategory_select.html
  - difficulty_select.html
  - quiz.html
  - result.html

[validation]
rules:
  grade: integer[1-6]
  category: enum[japanese, math, science, society]
  difficulty: enum[easy, medium, hard]
  score: integer[0-max_questions]

[errors]
requirements:
  - logging: required
  - user_messages: required
  - try_except: required_all_routes

[logging]
rules:
  - log_critical_errors: true
  - log_authentication: true
  - log_database_errors: true
  - debug_logs: development_only

[session]
required_keys:
  - questions
  - current_question
  - score
  - quiz_history
  - grade
  - category
  - subcategory
  - difficulty

[security]
requirements:
  - sql_injection: prevent
  - input_sanitization: required
  - session_protection: required
  - password_reset: required
  - admin_setup_secret: required

[requirements]
Flask==2.2.5
Werkzeug==2.2.3
flask-migrate==4.0.4
python-dotenv==1.0.0
psycopg2-binary==2.9.9
flask-login==0.6.2
Flask-SQLAlchemy==3.0.2
SQLAlchemy==1.4.46
flask-caching==2.0.2
dnspython==2.7.0
supabase==2.0.3
